
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if a user is following a category
    function isFollowingCategory(categoryId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.followedCategoryIds.hasAny([categoryId]);
    }
    
    match /users/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    match /forum_categories/{categoryId} {
      // Any authenticated user can see the list of categories
      allow list, get: if isAuthenticated();
      // Any authenticated user can create a new category
      allow create: if isAuthenticated();
      // Future rules for update/delete can be added here
    }
    
    match /forum_messages/{messageId} {
        // Allow reading messages only if the user is part of the category/group
        allow read: if isAuthenticated() && isFollowingCategory(resource.data.categoryId);
        // Allow creating messages only if the user is part of the category/group
        allow create: if isAuthenticated() && isFollowingCategory(request.resource.data.categoryId);
        // Prevent updates and deletes for now
        allow update, delete: if false;
    }
  }
}
